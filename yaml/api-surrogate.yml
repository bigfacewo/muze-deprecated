---
  title: "Surrogate"
  description: "Documented Methods"
  sections: 
    - 
      type: "markdown-section"
      content: "## <a name=SurrogateSideEffect></a> <span style=\"font-family: Source Code Pro; font-weight: 500;color: #eb5757;\">SurrogateSideEffect</span>\n\nThis class is inherited by all side effects which changes the look of any existing elements in the visualization.\nFor example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n\nTo use this,\n```\n     const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n\n     class BarColorChanger extends SurrogateSideEffect {\n         static formalName () {\n             return 'colorChanger';\n         }\n\n         // Implement the logic of applying the style here.\n         apply () {\n         }\n     }\n```\n\nExtends: [GenericSideEffect](api-GenericSideEffect)"
    - 
      type: "markdown-section"
      content: "<h2><span style=\"font-family: Source Code Pro;font-weight:500;font-size:24px;color: #eb5757\"><a name=applyInteractionStyle></a> applyInteractionStyle </span></h2>\n\nApplies or removes interaction styles from plot elements. An array of row ids needs to be passed\nwhich identifies the plot elements and applies styles to them.\n\nTo apply the interaction style,\n```\n     const entryRowIds = entrySet[0].uids;\n     const interactionStyle = [{\n         type: 'fill',\n         intensity: [0, 0, 15, 0] // hsla configuration\n     }];\n\n     this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n```"
    - 
      type: "markdown-section"
      content: "<p class=\"sub-header\">Parameters:</p>\n<table><thead><tr><td>Name</td><td>Type</td><td>Description</td></tr></thead>\n<tr>\n                <td class=\"param-name\">set</td>\n                <td><p>Array</p> </td>\n                <td><p>Array of row ids.</p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">config</td>\n                <td><p>Array</p> </td>\n                <td><p>Style configuration.</p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">config0</td>\n                <td><p>Object</p> </td>\n                <td><p>fill or stroke configuration.</p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">config0</td>\n                <td><p>string</p> </td>\n                <td><p>Type of style - fill or stroke.<table><thead><tr><td>Name</td><td>Type</td><td>Description</td></tr></thead></p> <p><tr>                 <td class=\"param-name\">intensity</td>                 <td><p>Array</p> </td>                 <td><p>hsla configuration.</p> </td>             </tr></table></p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">interactionType</td>\n                <td><p>string</p> </td>\n                <td><p>Type of interaction. This is needed for storing the styles for each type of interaction in the plot elements.</p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">apply</td>\n                <td><p>boolean</p> </td>\n                <td><p>Whether to apply or remove the interaction style.</p> </td>\n            </tr></table>"
    - 
      type: "markdown-section"
      content: "<a name=SurrogateSideEffect></a><p class=\"sub-header\">Returns:</p>\n\n <span style=\"font-family: 'Source Code Pro';margin-left: 2%;\">[surrogatesideeffect](api-surrogatesideeffect):&nbsp;</span>Instance of surrogate side effect."
